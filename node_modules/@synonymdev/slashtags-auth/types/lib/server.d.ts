export class SlashtagsAuthServer extends Base {
    /**
     * @param {Slashtag} slashtag
     * @param {{onauthz?: OnAuthz, onmagiclink?: OnMagicLink}} [opts]
     */
    constructor(slashtag: Slashtag, opts?: {
        onauthz?: OnAuthz;
        onmagiclink?: OnMagicLink;
    });
    onauthz: OnAuthz | typeof noauthz;
    onmagiclink: OnMagicLink | typeof nomagiclink;
    get methods(): {
        name: string;
        options: {
            responseEncoding: any;
        };
        handler: any;
    }[];
    authz(req: any, socket: any): Promise<void | import("./messages.js").IAuthZResponse>;
    magiclink(_: any, socket: any): Promise<void | import("./messages.js").IMagicLinkResponse>;
    /**
     * Format a `slashauth:<z-base32 this.slashtag.id>?q=token` URL.
     * @param {string} token
     */
    formatURL(token: string): string;
}
export default SlashtagsAuthServer;
export type IAuthZResponse = import('./messages').IAuthZResponse;
export type IMagicLinkResponse = import('./messages').IMagicLinkResponse;
export type OnAuthz = (token: string, remotePublicKey: Uint8Array) => IAuthZResponse | Promise<IAuthZResponse>;
export type OnMagicLink = (remotePublicKey: Uint8Array) => IMagicLinkResponse | Promise<IMagicLinkResponse>;
export type Slashtag = import('@synonymdev/slashtag').Slashtag;
import { Base } from "./base.js";
declare function noauthz(): void;
declare function nomagiclink(): void;
//# sourceMappingURL=server.d.ts.map